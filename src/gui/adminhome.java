/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import database.addevent;
import database.addholiday;
import database.addlecture;
import database.database;
import database.dbconnect;
import database.dboperation;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sandesh
 */
public class adminhome extends javax.swing.JFrame {

    DefaultTableModel dm;
    ArrayList update = new ArrayList();
    

    /**
     * Creates new form adminhome
     */
    public adminhome() {
        initComponents();
        editlecture.setVisible(false);
        addtopic.setVisible(false);
        addDatatoTable();
        notelecture();
        
        dbconnect dbcon = new dbconnect();
        addevent evt = new addevent();
        try {
            
            
            ResultSet event = null;
            event = evt.getevent();
            if(event.next())
            {
               
              
                addevent.setVisible(false);
                updateevent.setVisible(true);
                dbcon.closeConnection();
                
            }
            else{
                updateevent.setVisible(false);
                addevent.setVisible(true);
               dbcon.closeConnection();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ADDTOPIC.class.getName()).log(Level.SEVERE, null, ex);
            dbcon.closeConnection();
        }
        
        
        
        addholiday hol = new addholiday();
        try {
            
            
            ResultSet holi = null;
            holi = hol.getholiday();
            if(holi.next())
            {
               
              
                addholiday.setVisible(false);
                updateholiday.setVisible(true);
                dbcon.closeConnection();
                
            }
            else{
                updateholiday.setVisible(false);
                addholiday.setVisible(true);
               dbcon.closeConnection();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ADDTOPIC.class.getName()).log(Level.SEVERE, null, ex);
            dbcon.closeConnection();
        }
        
    }
    
    public void close()
    {
        WindowEvent close = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(close);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        updatelecture = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        endtime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        combobox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lecture = new javax.swing.JTextField();
        startime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sun = new javax.swing.JCheckBox();
        thu = new javax.swing.JCheckBox();
        wed = new javax.swing.JCheckBox();
        fri = new javax.swing.JCheckBox();
        mon = new javax.swing.JCheckBox();
        tue = new javax.swing.JCheckBox();
        sat = new javax.swing.JCheckBox();
        addlecture = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        Section = new javax.swing.JComboBox();
        startdate = new org.jdesktop.swingx.JXDatePicker();
        lastdate = new org.jdesktop.swingx.JXDatePicker();
        jLabel39 = new javax.swing.JLabel();
        sem = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        String cols[] = new String[] { "S.N","Lecture", "Faculty", "Section","Sem or Year" ,"Start Date",
            "Last Date","Start Time","End Time","Days"};
        dm = new DefaultTableModel(0,0);
        dm.setColumnIdentifiers(cols);
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        editlecture = new javax.swing.JButton();
        addtopic = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        eventname = new javax.swing.JTextField();
        eventdescription = new javax.swing.JTextField();
        addevent = new javax.swing.JButton();
        eventdate = new org.jdesktop.swingx.JXDatePicker();
        jLabel33 = new javax.swing.JLabel();
        updateevent = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        reason = new javax.swing.JTextField();
        addholiday = new javax.swing.JButton();
        holidaydate = new org.jdesktop.swingx.JXDatePicker();
        updateholiday = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Attendence = new javax.swing.JLabel();
        attendencestdname = new javax.swing.JTextField();
        totalattendence = new javax.swing.JTextField();
        attendence = new javax.swing.JButton();
        attendencesem = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        attendencefacultyname = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        referedbook = new javax.swing.JTextField();
        authorname = new javax.swing.JTextField();
        note = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        notelecture = new javax.swing.JComboBox();
        url = new javax.swing.JTextField();
        notesem = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        assignlecture = new javax.swing.JComboBox();
        assignfaculty = new javax.swing.JComboBox();
        assign = new javax.swing.JButton();
        assignsection = new javax.swing.JComboBox();
        assigndate = new org.jdesktop.swingx.JXDatePicker();
        jLabel40 = new javax.swing.JLabel();
        assignsem = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Classroom Schedule Management System");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Classroom Schedule Management System");

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Bijay");

        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Sandesh");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(2, 2, 2)))
                .addComponent(jLabel36))
        );

        updatelecture.setBackground(new java.awt.Color(0, 0, 0));
        updatelecture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        updatelecture.setToolTipText("");
        updatelecture.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        updatelecture.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Lecture :");

        endtime.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        endtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endtimeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Faculty Name :");

        combobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BSc.CSIT", "BIM", "BSW" }));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Start Date :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Last Date :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Start Time :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("End Time :");

        lecture.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lectureActionPerformed(evt);
            }
        });

        startime.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        startime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startimeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Days :");

        sun.setText("Sun");
        sun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sunActionPerformed(evt);
            }
        });

        thu.setText("Thu");

        wed.setText("Wed");
        wed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wedActionPerformed(evt);
            }
        });

        fri.setText("Fri");
        fri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friActionPerformed(evt);
            }
        });

        mon.setText("Mon");

        tue.setText("Tue");
        tue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tueActionPerformed(evt);
            }
        });

        sat.setText("Sat");
        sat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                satActionPerformed(evt);
            }
        });

        addlecture.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addlecture.setText("ADD SCHEDULE");
        addlecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addlectureActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Add Schedule for Lecture");

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Section :");

        Section.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B" }));

        jLabel39.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel39.setText("Semester or Year:");

        sem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jLabel7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(addlecture, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(sun)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tue)
                                .addGap(10, 10, 10)
                                .addComponent(wed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(thu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fri)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sat)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel34)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel39)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(sem, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lecture))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(startime, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lastdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(endtime))
                                .addGap(8, 8, 8)))))
                .addGap(164, 164, 164))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lecture, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Section, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(lastdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(endtime, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(mon)
                    .addComponent(tue)
                    .addComponent(wed)
                    .addComponent(thu)
                    .addComponent(fri)
                    .addComponent(sat)
                    .addComponent(sun))
                .addGap(35, 35, 35)
                .addComponent(addlecture, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        updatelecture.addTab("Add Lecture Schedule", jPanel2);

        jTable1.setModel(dm);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Edit Schedule or Add Lecture Topic");

        editlecture.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        editlecture.setText("EDIT SCHEDULE");
        editlecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editlectureActionPerformed(evt);
            }
        });

        addtopic.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addtopic.setText("ADD LECTURE");
        addtopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtopicActionPerformed(evt);
            }
        });

        jLabel21.setText("Click Table to  Add Topic and Edit Schedule");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(editlecture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addtopic, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(214, 214, 214))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jLabel21)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editlecture, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addtopic, javax.swing.GroupLayout.PREFERRED_SIZE, 33, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );

        updatelecture.addTab("Upadate Lecture Detail", jPanel3);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Event Name :");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Date :");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Description :");

        eventname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        eventdescription.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        addevent.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addevent.setText("SUBMIT");
        addevent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addeventActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel33.setText("Add Event");

        updateevent.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        updateevent.setText("UPDATE");
        updateevent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateeventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addevent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateevent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eventdescription)
                            .addComponent(eventname)
                            .addComponent(eventdate, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventdescription, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addevent)
                .addGap(18, 18, 18)
                .addComponent(updateevent)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        updatelecture.addTab("Add Event", jPanel4);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setText("Add Holliday");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Reason :");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Date :");

        addholiday.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addholiday.setText("SUBMIT");
        addholiday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addholidayActionPerformed(evt);
            }
        });

        updateholiday.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        updateholiday.setText("UPDATE");
        updateholiday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateholidayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addholiday, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(reason)
                                .addComponent(holidaydate, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                            .addComponent(updateholiday, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(reason, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidaydate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(addholiday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateholiday, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        updatelecture.addTab("Add holiday", jPanel5);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel16.setText("Attendence  Details");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Faculty  :");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("First Name :");

        Attendence.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Attendence.setText("Total Attendence :");

        attendencestdname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        totalattendence.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        totalattendence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalattendenceActionPerformed(evt);
            }
        });

        attendence.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        attendence.setText("SUBMIT");
        attendence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendenceActionPerformed(evt);
            }
        });

        attendencesem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th" }));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Semester or Year:");

        attendencefacultyname.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BSc.CSIT", "BIM", "BSW" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel16))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(Attendence))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalattendence)
                            .addComponent(attendencesem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(attendencefacultyname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(attendencestdname, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(attendence, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel16)
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(attendencestdname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(47, 47, 47))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(attendencefacultyname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attendencesem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalattendence, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Attendence))
                .addGap(36, 36, 36)
                .addComponent(attendence)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        updatelecture.addTab("Attendence Details", jPanel6);

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel22.setText("Add Note Details");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Author Name:");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Refered book:");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Enter Url :");

        referedbook.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        authorname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        note.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        note.setText("SUBMIT");
        note.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel38.setText("Lecture :");

        notelecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notelectureActionPerformed(evt);
            }
        });

        url.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        notesem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th" }));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Semester or Year:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(272, 272, 272))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25)
                            .addComponent(jLabel38)
                            .addComponent(jLabel26)
                            .addComponent(jLabel24)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(notelecture, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(referedbook)
                            .addComponent(authorname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(notesem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(note, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel22)
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel38)
                    .addComponent(notelecture, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(referedbook, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notesem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(note)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        updatelecture.addTab("Add Notes ", jPanel7);

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel27.setText("Assign Deadline");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Faculty Name :");

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Assigment Dedlines :");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel30.setText("Lecture :");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Book Name :");

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Section :");

        assignlecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignlectureActionPerformed(evt);
            }
        });

        assignfaculty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BSc.CSIT", "BIM", "BSW" }));

        assign.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        assign.setText("ASSIGN");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });

        assignsection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B" }));

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel40.setText("Semester or Year :");

        assignsem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(306, 306, 306))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(jLabel32)
                    .addComponent(jLabel30))
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(assignfaculty, 0, 201, Short.MAX_VALUE)
                    .addComponent(assignlecture, 0, 201, Short.MAX_VALUE)
                    .addComponent(assigndate, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(assignsection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel40)
                        .addGap(2, 2, 2)
                        .addComponent(assignsem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(236, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(267, 267, 267))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap(410, Short.MAX_VALUE)
                    .addComponent(jLabel31)
                    .addGap(319, 319, 319)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignfaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(assignsection, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(assignsem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignlecture, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(20, 20, 20)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(assigndate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(assign)
                .addContainerGap(153, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap(274, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(222, 222, 222)))
        );

        updatelecture.addTab("Assign Student", jPanel8);

        updatelecture.setSelectedComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(updatelecture)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatelecture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void endtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endtimeActionPerformed

    private void lectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lectureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lectureActionPerformed

    private void startimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startimeActionPerformed

    private void startdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startdateActionPerformed

    private void lastdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastdateActionPerformed

    private void tueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tueActionPerformed

    private void wedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wedActionPerformed

    private void friActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_friActionPerformed

    private void satActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_satActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_satActionPerformed

    private void sunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sunActionPerformed

    private void jXDatePicker4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXDatePicker4ActionPerformed

    private void addholidayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addholidayActionPerformed
      DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if (!"".equals(this.reason.getText()))
        {
            if(this.holidaydate.getDate() != null)
            {
                if(validdate(df.format(this.holidaydate.getDate())))
                {
                                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDataforholiday();
                                        //System.out.println("size" + datatosend.size());
                                        addholiday dbopt = new addholiday();
                                        try {
                                            dbopt.saveDatatoholiday(datatosend);
                                        } catch (ParseException ex) {
                                            System.out.println("operaion error:");// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        }
                }else
                {
                     JOptionPane.showMessageDialog(this,
                     "Select A date for Holiday ",
                     "Message", JOptionPane.INFORMATION_MESSAGE); 
                } 
           }else
               JOptionPane.showMessageDialog(this,
               "Select A date for Holiday ",
               "Message", JOptionPane.INFORMATION_MESSAGE);
           
       }else
           JOptionPane.showMessageDialog(this,
           "You Need Reason For Holiday ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
           
    }//GEN-LAST:event_addholidayActionPerformed

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
       DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if(this.assigndate.getDate() != null) {
            if(validdate(df.format(this.assigndate.getDate())))
            {
            
                ArrayList datatosend = new ArrayList();
                datatosend = getDataforassign();
                
                addquestion que = new addquestion(datatosend);
                que.setVisible(true);
                
            }else
                 JOptionPane.showMessageDialog(this,
                "Invalid Date ",
                "Message", JOptionPane.INFORMATION_MESSAGE);                        
            
        }
        else
            JOptionPane.showMessageDialog(this,
           "Select Deadline ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_assignActionPerformed

    private void addlectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addlectureActionPerformed
        DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if (!"".equals(this.lecture.getText())) {
            if (this.startdate.getDate() != null && this.lastdate.getDate() != null) {
                if (( validdate(df.format(this.startdate.getDate())) )
                        && ( validdate(df.format(this.lastdate.getDate()))) ) {
                    if (this.startime.getText() != "" && this.endtime.getText() != "") {
                        if (time(this.startime.getText()) && time(this.endtime.getText())) {
                            if (sun.isSelected() || mon.isSelected() || tue.isSelected()
                                    || wed.isSelected() || thu.isSelected() || fri.isSelected() || sat.isSelected()) {
                                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDataToSave();
                                        //System.out.println("size" + datatosend.size());
                                        addlecture dbopt = new addlecture();
                                        try {
                                            dbopt.saveDatalectureTable(datatosend);
                                            addDatatoTable();
                                            notelecture();
                                            
                                            new adminhome().setVisible(true );
                                            
                                            
                                        } catch (ParseException ex) {
                                            System.out.println("operaion error:");// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        }
                            } else {
                                JOptionPane.showMessageDialog(this,
                                        "Select a Days ",
                                        "Message", JOptionPane.INFORMATION_MESSAGE);
                            }

                        } else {
                            JOptionPane.showMessageDialog(this,
                                    "Time Formate is Invalid ",
                                    "Message", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        if (this.startime.getText() == "" && this.endtime.getText() == "") {
                            JOptionPane.showMessageDialog(this,
                                    "Time is Empty ",
                                    "Message", JOptionPane.INFORMATION_MESSAGE);
                        } else if (this.startime.getText() == "") {
                            JOptionPane.showMessageDialog(this,
                                    "Start Time is Empty ",
                                    "Message", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this,
                                    "End Time Is Empty ",
                                    "Message", JOptionPane.INFORMATION_MESSAGE);
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(this,
                            "Invalid Dates ",
                            "Message", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                if (this.startdate.getDate() == null && this.lastdate.getDate() == null) {
                    JOptionPane.showMessageDialog(this,
                            "Select a Date ",
                            "Message", JOptionPane.INFORMATION_MESSAGE);
                } else if (this.startdate.getDate() == null) {
                    JOptionPane.showMessageDialog(this,
                            "Start date is Empty ",
                            "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "Lastdate is Empty",
                            "Message", JOptionPane.INFORMATION_MESSAGE);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Lecture is Empty ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_addlectureActionPerformed

    private void addeventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addeventActionPerformed
       DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if (!"".equals(this.eventname.getText())) {
           if (!"".equals(this.eventdescription.getText())) {
               if(this.eventdate.getDate() != null)
               {
                   if(validdate(df.format(this.eventdate.getDate())))
                   {
                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDataforevent();
                                        //System.out.println("size" + datatosend.size());
                                        addevent dbopt = new addevent();
                                        try {
                                            dbopt.saveDatatoevent(datatosend);
                                        } catch (ParseException ex) {
                                            System.out.println("operaion error:");// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        }
                   }
                   else
                     JOptionPane.showMessageDialog(this,
                    "Select a Valid Date ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);
               }else
                     JOptionPane.showMessageDialog(this,
                    "Select Date ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);
           }else
                JOptionPane.showMessageDialog(this,
                "Event Description is Empty ",
                "Message", JOptionPane.INFORMATION_MESSAGE);
           
       }else
           JOptionPane.showMessageDialog(this,
           "Event Name is Empty ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_addeventActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      // ArrayList update = new ArrayList();
        int  selectedRow = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                update.add(model.getValueAt(selectedRow, 0).toString());
                update.add(model.getValueAt(selectedRow, 1).toString());
                update.add(model.getValueAt(selectedRow, 2).toString());
                update.add(model.getValueAt(selectedRow, 3).toString());
                update.add(model.getValueAt(selectedRow, 4).toString());
                update.add(model.getValueAt(selectedRow, 5).toString());
                update.add(model.getValueAt(selectedRow, 6).toString());
                update.add(model.getValueAt(selectedRow, 7).toString());
                update.add(model.getValueAt(selectedRow, 8).toString());
                update.add(model.getValueAt(selectedRow, 9).toString());
                
        editlecture.setVisible(true);
        addtopic.setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void editlectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editlectureActionPerformed
       /* ArrayList update = new ArrayList();
        int selectedRow = 0 ;
            selectedRow = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                update.add(model.getValueAt(selectedRow, 0).toString());
                update.add(model.getValueAt(selectedRow, 1).toString());
                update.add(model.getValueAt(selectedRow, 2).toString());
                update.add(model.getValueAt(selectedRow, 3).toString());
                update.add(model.getValueAt(selectedRow, 4).toString());
                update.add(model.getValueAt(selectedRow, 5).toString());
                update.add(model.getValueAt(selectedRow, 6).toString());
                update.add(model.getValueAt(selectedRow, 7).toString());
                update.add(model.getValueAt(selectedRow, 8).toString());
                update.add(model.getValueAt(selectedRow, 9).toString());*/

        updatedata ud = new updatedata(update);
        ud.setVisible(true);
    }//GEN-LAST:event_editlectureActionPerformed

    private void assignlectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignlectureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignlectureActionPerformed

    private void addtopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtopicActionPerformed
        ADDTOPIC add = new ADDTOPIC(this, rootPaneCheckingEnabled);
        add.setVisible(true);
    }//GEN-LAST:event_addtopicActionPerformed

    private void notelectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notelectureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notelectureActionPerformed

    private void totalattendenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalattendenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalattendenceActionPerformed

    private void attendenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendenceActionPerformed
        if (!"".equals(this.attendencestdname.getText())) {
            if (!"".equals(this.totalattendence.getText())) {
                ArrayList datatosend = new ArrayList();

                                        datatosend = getDataforattendence();
                                        //System.out.println("size" + datatosend.size());
                                        database dbopt = new database();
                                        try {
                                            dbopt.saveDatatoattendence(datatosend);
                                        } catch (ParseException ex) {
                                            System.out.println("operaion error:");// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        }
            }
            else
                JOptionPane.showMessageDialog(this,
                 "Enter Attendence ",
                "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this,
           "Student Name is Empty ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
            
        
    }//GEN-LAST:event_attendenceActionPerformed

    private void noteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteActionPerformed
        if (!"".equals(this.attendencestdname.getText())) {
            if (!"".equals(this.referedbook.getText())) {
                if (!"".equals(this.authorname.getText()))
                 {
                             
                    
                
                                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDatafornote();
                                        //System.out.println("size" + datatosend.size());
                                        database dbopt = new database();
                                        try {
                                            dbopt.saveDatatonote(datatosend);
                                        } catch (ParseException ex) {
                                            System.out.println("operaion error:");// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        }
                        
                }else
                     JOptionPane.showMessageDialog(this,
                     "Authorname is Empty ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this,
                 "Enter a Bookname ",
                "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this,
           "Please Select Lecture ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_noteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        home ho = new home();
        ho.setVisible(true);
        close();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateeventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateeventActionPerformed
       DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if (!"".equals(this.eventname.getText())) {
           if (!"".equals(this.eventdescription.getText())) {
               if(this.eventdate.getDate() != null)
               {
                   if(validdate(df.format(this.eventdate.getDate())))
                   {
                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDataforevent();
                                        //System.out.println("size" + datatosend.size());
                                        addevent dbopt = new addevent();
                                        
                                            dbopt.updateevent(datatosend);
                                        ;// Logger.getLogger(addnewstudent.class.getName()).log(Level.SEVERE, null, ex);

                                        
                   }
                   else
                     JOptionPane.showMessageDialog(this,
                    "Select a Valid Date ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);
               }else
                     JOptionPane.showMessageDialog(this,
                    "Select Date ",
                    "Message", JOptionPane.INFORMATION_MESSAGE);
           }else
                JOptionPane.showMessageDialog(this,
                "Event Description is Empty ",
                "Message", JOptionPane.INFORMATION_MESSAGE);
           
       }else
           JOptionPane.showMessageDialog(this,
           "Event Name is Empty ",
           "Message", JOptionPane.INFORMATION_MESSAGE);  
    }//GEN-LAST:event_updateeventActionPerformed

    private void updateholidayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateholidayActionPerformed
       DateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        if (!"".equals(this.reason.getText()))
        {
            if(this.holidaydate.getDate() != null)
            {
                if(validdate(df.format(this.holidaydate.getDate())))
                {
                                        ArrayList datatosend = new ArrayList();

                                        datatosend = getDataforholiday();
                                        //System.out.println("size" + datatosend.size());
                                        addholiday dbopt = new addholiday();
                                        
                                            dbopt.updateholiday(datatosend);
                                       
                }else
                {
                     JOptionPane.showMessageDialog(this,
                     "Select A date for Holiday ",
                     "Message", JOptionPane.INFORMATION_MESSAGE); 
                } 
           }else
               JOptionPane.showMessageDialog(this,
               "Select A date for Holiday ",
               "Message", JOptionPane.INFORMATION_MESSAGE);
           
       }else
           JOptionPane.showMessageDialog(this,
           "You Need Reason For Holiday ",
           "Message", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_updateholidayActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public boolean validdate(String pass) {

        Date BOD = null;

        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        long s = Long.parseLong(pass.substring(0, 4));
        Date today = Calendar.getInstance().getTime();
        long d = Long.parseLong(df.format(today).substring(0, 4));

        long startmonth = Long.parseLong(pass.substring(5, 7));
        long startday = Long.parseLong(pass.substring(8, 10));

        long month = Long.parseLong(df.format(today).substring(5, 7));
        long day = Long.parseLong(df.format(today).substring(8, 10));
        long n = 32;

        if (s >= d && s <= d + 1) {
            if ((startmonth >= month && startday >= day)
                    || (startmonth > month && startday <= n)) {

                df.setLenient(false);
                try {
                    BOD = df.parse(pass);
                    return true;
                } catch (Exception e) {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }

    }

    public static boolean time(String time) {

        StringTokenizer st = new StringTokenizer(time, ":");
        if (st.countTokens() == 3) {

            SimpleDateFormat sdf1 = new SimpleDateFormat("h:mm:ss a");
            sdf1.setLenient(false);
            try {

                Date d2 = sdf1.parse(time);
                return true;
            } catch (Exception e) {
                return false;
            }
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("h:mm a");
            sdf.setLenient(false);
            try {
                Date d1 = sdf.parse(time);

                return true;
            } catch (Exception e) {
                return false;
            }
        }
    }

    public void addDatatoTable() {
        ResultSet up = null;
        up = null;
        dbconnect conn = new dbconnect();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        addlecture dopt = new addlecture();
        up = dopt.updatelecture();
        
        try {
            while (up.next()) {
                String id = up.getString(1);
                String lecture = up.getString(2);
                String faculty = up.getString(3);
                String section = up.getString(4);
                String semester = up.getString(5);
                String sd = df.format(up.getDate(6));
                String ld = df.format(up.getDate(7));
                String starttime = up.getString(8);
                String lasttime = up.getString(9);
                String days = up.getString(10);
                Vector<String> v = new Vector<String>();
                  v.add(id);
                  v.add(lecture);
                  v.add(faculty);
                  v.add(section);
                  v.add(semester);
                  v.add(sd);
                  v.add(ld);
                  v.add(starttime);
                  v.add(lasttime);
                  v.add(days);
                dm.addRow(v);
                
             
                conn.closeConnection();

            }
        } catch (SQLException ex) {
            conn.closeConnection();
            Logger.getLogger(adminhome.class.getName()).log(Level.SEVERE, null, ex);
        }
          up = null;
    }

    public ArrayList getDataToSave() {
        ArrayList data = new ArrayList();
        data.add(this.lecture.getText());
        data.add(this.combobox.getSelectedItem().toString());

        data.add(this.Section.getSelectedItem().toString());
        data.add(this.sem.getSelectedItem().toString());
        

        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date s = this.startdate.getDate();
        String formattedDates = df.format(s);
        data.add(formattedDates);

        Date l = this.lastdate.getDate();
        String formattedDatel = df.format(l);
        data.add(formattedDatel);

        data.add(this.startime.getText());
        data.add(this.endtime.getText());

        String days = "";
        if (sun.isSelected()) {
            days += sun.getText() + " ";
        }
        if (mon.isSelected()) {
            days += mon.getText() + " ";
        }
        if (tue.isSelected()) {
            days += tue.getText() + " ";
        }
        if (wed.isSelected()) {
            days += wed.getText() + " ";
        }
        if (thu.isSelected()) {
            days += thu.getText() + " ";
        }
        if (fri.isSelected()) {
            days += fri.getText() + " ";
        }
        if (sat.isSelected()) {
            days += sat.getText() + " ";
        }
        data.add(days);

        return data;
    }
    
    public ArrayList getDataforevent()
    {
         ArrayList event = new ArrayList();
            event.add(this.eventname.getText());
            event.add(this.eventdescription.getText());
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date s = this.eventdate.getDate();
                String formattedDates = df.format(s);
            event.add(formattedDates);
            
            
         return event;
       
    }
    public ArrayList getDataforholiday()
    {
         ArrayList holiday = new ArrayList();
            holiday.add(this.reason.getText());
         
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date s = this.holidaydate.getDate();
                String formattedDates = df.format(s);
            holiday.add(formattedDates);
            
            
         return holiday;
       
    }
    public ArrayList getDataforattendence()
    {
         ArrayList att = new ArrayList();
           att.add(this.attendencestdname.getText());
           att.add(this.attendencefacultyname.getSelectedItem().toString());
           att.add(this.attendencesem.getSelectedItem().toString());
           att.add(this.totalattendence.getText());
         return att;
       
    }
    
    public ArrayList getDatafornote()
    {
         ArrayList note = new ArrayList();
           note.add(this.notelecture.getSelectedItem().toString());
           note.add(this.referedbook.getText());
           note.add(this.notesem.getSelectedItem().toString());
           note.add(this.authorname.getText());
           note.add(this.url.getText());
         return note;
       
    }
     public ArrayList getDataforassign()
    {
         ArrayList assign = new ArrayList();
           assign.add(this.assignfaculty.getSelectedItem().toString());
           assign.add(this.assignsection.getSelectedItem().toString());
           assign.add(this.assignsem.getSelectedItem().toString());
           assign.add(this.assignlecture.getSelectedItem().toString());
           DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date s = this.assigndate.getDate();
                String formattedDates = df.format(s);
           assign.add(formattedDates);
           assign.add("");
         return assign;
       
    }
     
     public void notelecture()
     {
         dbconnect dbcon = new dbconnect();
         addlecture evt = new addlecture();
        
         try {
            
            
            ResultSet event = null;
            event = evt.getdataforcombo();
            while(event.next())
            {
                
                         notelecture.addItem(event.getString("lecture"));
                         assignlecture.addItem(event.getString("lecture"));
               
            }
            dbcon.closeConnection();
           
        } catch (SQLException ex) {
            Logger.getLogger(ADDTOPIC.class.getName()).log(Level.SEVERE, null, ex);
            dbcon.closeConnection();
        }
        
     }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminhome().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Attendence;
    private javax.swing.JComboBox Section;
    private javax.swing.JButton addevent;
    private javax.swing.JButton addholiday;
    private javax.swing.JButton addlecture;
    private javax.swing.JButton addtopic;
    private javax.swing.JButton assign;
    private org.jdesktop.swingx.JXDatePicker assigndate;
    private javax.swing.JComboBox assignfaculty;
    private javax.swing.JComboBox assignlecture;
    private javax.swing.JComboBox assignsection;
    private javax.swing.JComboBox assignsem;
    private javax.swing.JButton attendence;
    private javax.swing.JComboBox attendencefacultyname;
    private javax.swing.JComboBox attendencesem;
    private javax.swing.JTextField attendencestdname;
    private javax.swing.JTextField authorname;
    private javax.swing.JComboBox combobox;
    private javax.swing.JButton editlecture;
    private javax.swing.JTextField endtime;
    private org.jdesktop.swingx.JXDatePicker eventdate;
    private javax.swing.JTextField eventdescription;
    private javax.swing.JTextField eventname;
    private javax.swing.JCheckBox fri;
    private org.jdesktop.swingx.JXDatePicker holidaydate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker lastdate;
    private javax.swing.JTextField lecture;
    private javax.swing.JCheckBox mon;
    private javax.swing.JButton note;
    private javax.swing.JComboBox notelecture;
    private javax.swing.JComboBox notesem;
    private javax.swing.JTextField reason;
    private javax.swing.JTextField referedbook;
    private javax.swing.JCheckBox sat;
    private javax.swing.JComboBox sem;
    private org.jdesktop.swingx.JXDatePicker startdate;
    private javax.swing.JTextField startime;
    private javax.swing.JCheckBox sun;
    private javax.swing.JCheckBox thu;
    private javax.swing.JTextField totalattendence;
    private javax.swing.JCheckBox tue;
    private javax.swing.JButton updateevent;
    private javax.swing.JButton updateholiday;
    private javax.swing.JTabbedPane updatelecture;
    private javax.swing.JTextField url;
    private javax.swing.JCheckBox wed;
    // End of variables declaration//GEN-END:variables
}
